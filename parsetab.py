
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CF CM CONTINUE CP DEF DIV DP ID IF INT LESS MORE MUL NOT NUMBER_INT NUMBER_REAL OF OP OR PRINT PRISV RAVNO REAL RETURN SC STRING SUB SUM VARS WHILEprog : VARS dec_list OF stmt_list CF\n            | VARS dec_list def_list OF stmt_list CFdef_list : def\n               | def_list SC defdef : DEF ID OP dec_list CP OF stmt_list_def CF\n            | DEF ID OP dec_list CP OF VARS dec_list stmt_list_def CFdefstmt : ID OP args CPargs : arg\n            | args SC argarg : ID\n            | NUMBER_INT\n            | NUMBER_REAL\n            | OP exp CPdec_list : dec\n               | dec_list SC decdec : type DP OP id_list CPtype : INT\n            | REAL\n            | STRINGid_list : ID\n                | id_list CM IDstmt_list : stmt\n                | stmt_list SC stmtstmt : prisv\n            | print\n            | while\n            | ifstmt_list_if : stmt_if\n                | stmt_list_if SC stmt_ifstmt_if : prisv\n            | print\n            | while\n            | if\n            | CONTINUE\n            | BREAKstmt_list_def : stmt_def\n                | stmt_list_def SC stmt_defstmt_def : prisv\n            | print\n            | while\n            | if\n            | returnreturn : RETURN expprisv : ID PRISV exp\n                | ID PRISV STRINGexp : term\n            | exp SUM term\n            | exp SUB termterm : factor\n            | term MUL factor\n            | term DIV factorfactor : defstmt\n            | ID\n            | NUMBER_INT\n            | NUMBER_REAL\n            | OP exp CPprint : PRINT OP exp CP\n                | PRINT OP STRING CPwhile : WHILE bool_exp OF stmt_list CFif : IF bool_exp OF stmt_list_if CFbool_exp : bool_exp OR bool_exp_term\n                | bool_exp_term\n                | NOT bool_exp\n                | boolbool_exp_term : bool_exp_term AND bool\n                | boolbool : OP exp RAVNO exp CP\n            | OP exp MORE exp CP\n            | OP exp LESS exp CP'
    
_lr_action_items = {'VARS':([0,109,],[2,118,]),'$end':([1,30,63,],[0,-1,-2,]),'INT':([2,11,42,118,],[6,6,6,6,]),'REAL':([2,11,42,118,],[7,7,7,7,]),'STRING':([2,11,32,33,42,118,],[8,8,48,56,8,8,]),'OF':([3,4,10,12,27,34,35,37,39,41,60,65,76,77,78,90,113,114,115,128,134,],[9,-14,25,-3,-15,57,-62,-64,62,-4,-63,-16,-61,-66,-65,109,-67,-68,-69,-5,-6,]),'SC':([3,4,10,12,15,16,17,18,19,20,27,40,41,45,46,47,48,49,50,51,52,53,64,65,73,74,75,82,83,84,85,86,87,88,89,92,94,95,96,97,98,99,100,101,102,103,107,111,116,117,119,120,121,122,123,124,126,127,128,130,131,132,133,134,],[11,-14,26,-3,31,-22,-24,-25,-26,-27,-15,31,-4,-23,-53,-44,-45,-46,-49,-52,-54,-55,11,-16,-57,-58,31,108,-28,-30,-31,-32,-33,-34,-35,-10,112,-8,-11,-12,-47,-48,-50,-51,-56,-59,-60,-7,-29,129,-36,-38,-39,-40,-41,-42,-13,-9,-5,11,-43,-37,129,-6,]),'DEF':([3,4,26,27,65,],[13,-14,13,-15,-16,]),'CP':([4,27,43,44,46,49,50,51,52,53,55,56,64,65,72,91,92,94,95,96,97,98,99,100,101,102,104,105,106,110,111,126,127,],[-14,-15,65,-20,-53,-46,-49,-52,-54,-55,73,74,90,-16,102,-21,-10,111,-8,-11,-12,-47,-48,-50,-51,-56,113,114,115,126,-7,-13,-9,]),'ID':([4,9,13,25,27,29,31,32,33,38,54,57,62,65,66,67,68,69,70,71,79,80,81,93,108,109,112,125,129,130,],[-14,21,28,21,-15,44,21,46,46,46,46,21,21,-16,91,92,46,46,46,46,46,46,46,46,21,21,92,46,21,21,]),'PRINT':([4,9,25,27,31,57,62,65,108,109,129,130,],[-14,22,22,-15,22,22,22,-16,22,22,22,22,]),'WHILE':([4,9,25,27,31,57,62,65,108,109,129,130,],[-14,23,23,-15,23,23,23,-16,23,23,23,23,]),'IF':([4,9,25,27,31,57,62,65,108,109,129,130,],[-14,24,24,-15,24,24,24,-16,24,24,24,24,]),'RETURN':([4,27,65,109,129,130,],[-14,-15,-16,125,125,125,]),'DP':([5,6,7,8,],[14,-17,-18,-19,]),'OP':([14,22,23,24,28,32,33,36,38,46,54,58,59,67,68,69,70,71,79,80,81,93,112,125,],[29,33,38,38,42,54,54,38,54,67,54,38,38,93,54,54,54,54,54,54,54,54,93,54,]),'CF':([15,16,17,18,19,20,40,45,46,47,48,49,50,51,52,53,73,74,75,82,83,84,85,86,87,88,89,98,99,100,101,102,103,107,111,116,117,119,120,121,122,123,124,131,132,133,],[30,-22,-24,-25,-26,-27,63,-23,-53,-44,-45,-46,-49,-52,-54,-55,-57,-58,103,107,-28,-30,-31,-32,-33,-34,-35,-47,-48,-50,-51,-56,-59,-60,-7,-29,128,-36,-38,-39,-40,-41,-42,-43,-37,134,]),'PRISV':([21,],[32,]),'NOT':([23,24,36,],[36,36,36,]),'NUMBER_INT':([32,33,38,54,67,68,69,70,71,79,80,81,93,112,125,],[52,52,52,52,96,52,52,52,52,52,52,52,52,96,52,]),'NUMBER_REAL':([32,33,38,54,67,68,69,70,71,79,80,81,93,112,125,],[53,53,53,53,97,53,53,53,53,53,53,53,53,97,53,]),'OR':([34,35,37,39,60,76,77,78,113,114,115,],[58,-62,-64,58,58,-61,-66,-65,-67,-68,-69,]),'AND':([35,37,76,77,78,113,114,115,],[59,-66,59,-66,-65,-67,-68,-69,]),'CM':([43,44,91,],[66,-20,-21,]),'MUL':([46,49,50,51,52,53,98,99,100,101,102,111,],[-53,70,-49,-52,-54,-55,70,70,-50,-51,-56,-7,]),'DIV':([46,49,50,51,52,53,98,99,100,101,102,111,],[-53,71,-49,-52,-54,-55,71,71,-50,-51,-56,-7,]),'SUM':([46,47,49,50,51,52,53,55,61,72,98,99,100,101,102,104,105,106,110,111,131,],[-53,68,-46,-49,-52,-54,-55,68,68,68,-47,-48,-50,-51,-56,68,68,68,68,-7,68,]),'SUB':([46,47,49,50,51,52,53,55,61,72,98,99,100,101,102,104,105,106,110,111,131,],[-53,69,-46,-49,-52,-54,-55,69,69,69,-47,-48,-50,-51,-56,69,69,69,69,-7,69,]),'RAVNO':([46,49,50,51,52,53,61,98,99,100,101,102,111,],[-53,-46,-49,-52,-54,-55,79,-47,-48,-50,-51,-56,-7,]),'MORE':([46,49,50,51,52,53,61,98,99,100,101,102,111,],[-53,-46,-49,-52,-54,-55,80,-47,-48,-50,-51,-56,-7,]),'LESS':([46,49,50,51,52,53,61,98,99,100,101,102,111,],[-53,-46,-49,-52,-54,-55,81,-47,-48,-50,-51,-56,-7,]),'CONTINUE':([62,108,],[88,88,]),'BREAK':([62,108,],[89,89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'dec_list':([2,42,118,],[3,64,130,]),'dec':([2,11,42,118,],[4,27,4,4,]),'type':([2,11,42,118,],[5,5,5,5,]),'def_list':([3,],[10,]),'def':([3,26,],[12,41,]),'stmt_list':([9,25,57,],[15,40,75,]),'stmt':([9,25,31,57,],[16,16,45,16,]),'prisv':([9,25,31,57,62,108,109,129,130,],[17,17,17,17,84,84,120,120,120,]),'print':([9,25,31,57,62,108,109,129,130,],[18,18,18,18,85,85,121,121,121,]),'while':([9,25,31,57,62,108,109,129,130,],[19,19,19,19,86,86,122,122,122,]),'if':([9,25,31,57,62,108,109,129,130,],[20,20,20,20,87,87,123,123,123,]),'bool_exp':([23,24,36,],[34,39,60,]),'bool_exp_term':([23,24,36,58,],[35,35,35,76,]),'bool':([23,24,36,58,59,],[37,37,37,77,78,]),'id_list':([29,],[43,]),'exp':([32,33,38,54,79,80,81,93,125,],[47,55,61,72,104,105,106,110,131,]),'term':([32,33,38,54,68,69,79,80,81,93,125,],[49,49,49,49,98,99,49,49,49,49,49,]),'factor':([32,33,38,54,68,69,70,71,79,80,81,93,125,],[50,50,50,50,50,50,100,101,50,50,50,50,50,]),'defstmt':([32,33,38,54,68,69,70,71,79,80,81,93,125,],[51,51,51,51,51,51,51,51,51,51,51,51,51,]),'stmt_list_if':([62,],[82,]),'stmt_if':([62,108,],[83,116,]),'args':([67,],[94,]),'arg':([67,112,],[95,127,]),'stmt_list_def':([109,130,],[117,133,]),'stmt_def':([109,129,130,],[119,132,119,]),'return':([109,129,130,],[124,124,124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> VARS dec_list OF stmt_list CF','prog',5,'p_prog','parser.py',23),
  ('prog -> VARS dec_list def_list OF stmt_list CF','prog',6,'p_prog','parser.py',24),
  ('def_list -> def','def_list',1,'p_def_list','parser.py',31),
  ('def_list -> def_list SC def','def_list',3,'p_def_list','parser.py',32),
  ('def -> DEF ID OP dec_list CP OF stmt_list_def CF','def',8,'p_def','parser.py',39),
  ('def -> DEF ID OP dec_list CP OF VARS dec_list stmt_list_def CF','def',10,'p_def','parser.py',40),
  ('defstmt -> ID OP args CP','defstmt',4,'p_defstmt','parser.py',47),
  ('args -> arg','args',1,'p_args','parser.py',51),
  ('args -> args SC arg','args',3,'p_args','parser.py',52),
  ('arg -> ID','arg',1,'p_arg','parser.py',60),
  ('arg -> NUMBER_INT','arg',1,'p_arg','parser.py',61),
  ('arg -> NUMBER_REAL','arg',1,'p_arg','parser.py',62),
  ('arg -> OP exp CP','arg',3,'p_arg','parser.py',63),
  ('dec_list -> dec','dec_list',1,'p_dec_list','parser.py',70),
  ('dec_list -> dec_list SC dec','dec_list',3,'p_dec_list','parser.py',71),
  ('dec -> type DP OP id_list CP','dec',5,'p_dec','parser.py',78),
  ('type -> INT','type',1,'p_type','parser.py',82),
  ('type -> REAL','type',1,'p_type','parser.py',83),
  ('type -> STRING','type',1,'p_type','parser.py',84),
  ('id_list -> ID','id_list',1,'p_id_list','parser.py',88),
  ('id_list -> id_list CM ID','id_list',3,'p_id_list','parser.py',89),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',96),
  ('stmt_list -> stmt_list SC stmt','stmt_list',3,'p_stmt_list','parser.py',97),
  ('stmt -> prisv','stmt',1,'p_stmt','parser.py',104),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',105),
  ('stmt -> while','stmt',1,'p_stmt','parser.py',106),
  ('stmt -> if','stmt',1,'p_stmt','parser.py',107),
  ('stmt_list_if -> stmt_if','stmt_list_if',1,'p_stmt_list_if','parser.py',112),
  ('stmt_list_if -> stmt_list_if SC stmt_if','stmt_list_if',3,'p_stmt_list_if','parser.py',113),
  ('stmt_if -> prisv','stmt_if',1,'p_stmt_if','parser.py',120),
  ('stmt_if -> print','stmt_if',1,'p_stmt_if','parser.py',121),
  ('stmt_if -> while','stmt_if',1,'p_stmt_if','parser.py',122),
  ('stmt_if -> if','stmt_if',1,'p_stmt_if','parser.py',123),
  ('stmt_if -> CONTINUE','stmt_if',1,'p_stmt_if','parser.py',124),
  ('stmt_if -> BREAK','stmt_if',1,'p_stmt_if','parser.py',125),
  ('stmt_list_def -> stmt_def','stmt_list_def',1,'p_stmt_list_def','parser.py',130),
  ('stmt_list_def -> stmt_list_def SC stmt_def','stmt_list_def',3,'p_stmt_list_def','parser.py',131),
  ('stmt_def -> prisv','stmt_def',1,'p_stmt_def','parser.py',138),
  ('stmt_def -> print','stmt_def',1,'p_stmt_def','parser.py',139),
  ('stmt_def -> while','stmt_def',1,'p_stmt_def','parser.py',140),
  ('stmt_def -> if','stmt_def',1,'p_stmt_def','parser.py',141),
  ('stmt_def -> return','stmt_def',1,'p_stmt_def','parser.py',142),
  ('return -> RETURN exp','return',2,'p_return','parser.py',147),
  ('prisv -> ID PRISV exp','prisv',3,'p_prisv','parser.py',151),
  ('prisv -> ID PRISV STRING','prisv',3,'p_prisv','parser.py',152),
  ('exp -> term','exp',1,'p_exp','parser.py',156),
  ('exp -> exp SUM term','exp',3,'p_exp','parser.py',157),
  ('exp -> exp SUB term','exp',3,'p_exp','parser.py',158),
  ('term -> factor','term',1,'p_term','parser.py',165),
  ('term -> term MUL factor','term',3,'p_term','parser.py',166),
  ('term -> term DIV factor','term',3,'p_term','parser.py',167),
  ('factor -> defstmt','factor',1,'p_factor','parser.py',174),
  ('factor -> ID','factor',1,'p_factor','parser.py',175),
  ('factor -> NUMBER_INT','factor',1,'p_factor','parser.py',176),
  ('factor -> NUMBER_REAL','factor',1,'p_factor','parser.py',177),
  ('factor -> OP exp CP','factor',3,'p_factor','parser.py',178),
  ('print -> PRINT OP exp CP','print',4,'p_print','parser.py',184),
  ('print -> PRINT OP STRING CP','print',4,'p_print','parser.py',185),
  ('while -> WHILE bool_exp OF stmt_list CF','while',5,'p_while','parser.py',189),
  ('if -> IF bool_exp OF stmt_list_if CF','if',5,'p_if','parser.py',193),
  ('bool_exp -> bool_exp OR bool_exp_term','bool_exp',3,'p_bool_exp','parser.py',197),
  ('bool_exp -> bool_exp_term','bool_exp',1,'p_bool_exp','parser.py',198),
  ('bool_exp -> NOT bool_exp','bool_exp',2,'p_bool_exp','parser.py',199),
  ('bool_exp -> bool','bool_exp',1,'p_bool_exp','parser.py',200),
  ('bool_exp_term -> bool_exp_term AND bool','bool_exp_term',3,'p_bool_exp_term','parser.py',209),
  ('bool_exp_term -> bool','bool_exp_term',1,'p_bool_exp_term','parser.py',210),
  ('bool -> OP exp RAVNO exp CP','bool',5,'p_bool','parser.py',219),
  ('bool -> OP exp MORE exp CP','bool',5,'p_bool','parser.py',220),
  ('bool -> OP exp LESS exp CP','bool',5,'p_bool','parser.py',221),
]
